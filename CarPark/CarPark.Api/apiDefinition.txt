openapi: 3.0.0
info:
  title: Car Park API
  version: 0.1.0
servers:
  - url: /v1/
paths:
  /spaces/:
    get:
      tags:
      - Parking Spaces API
      description: Gets a list of all parking spaces registered in the system.
      responses:
        '200':
          description: List of all parking spaces
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/space-response'

    post:
      tags:
      - Parking Spaces API
      description: Creates a new parking space in the system.
      requestBody:
        description: Specification of the parking space to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/space-request'
      responses:
        '200':
          description: The parking space was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/space-response'
        '400':
          description: Not all properties in the request have a valid value.
          content:
            text/plain:
              schema:
                type: string
        '409':
          description: A parking space with the supplied number and story already exists in the system.


  /spaces/{id}/:
    get:
      tags:
      - Parking Spaces API
      description: Gets a specific parking space from the system.
      parameters:
      - name: id
        description: ID of the parking space to get
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The parking space with the ID supplied was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/space-response'
        '404':
          description: No parking space was found for the ID.

    delete:
      tags:
      - Parking Spaces API
      description: Deletes a specific parking space from the system.
      parameters:
      - name: id
        description: ID of the parking space to get
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: The parking space with the ID supplied was deleted.
        '404':
          description: No parking space was found for the ID.

  /spaces/{id}/checkin/:
    post:
      tags:
      - Parking Spaces API
      description: Updates the status for a specific parking space.
      parameters:
      - name: id
        description: ID of the parking space to get
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The update was applied successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkin-response'
        '400':
          description: The parking space is already occupied.
        '404':
          description: No parking space was found for the ID.
  
  /spaces/{id}/checkout/:
    post:
      tags:
      - Parking Spaces API
      description: Updates the status for a specific parking space.
      parameters:
      - name: id
        description: ID of the parking space to get
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The update was applied successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkout-response'
        '400':
          description: The parking space is not currently occupied.
        '404':
          description: No parking space was found for the ID.

components:
  schemas:
    space-request:
      type: object
      properties:
        story:
          type: string
          example: A
        number:
          type: integer
          example: 1
    space-response:
      type: object
      properties:
        id:
          type: string
        story:
          type: string
          example: A
        number:
          type: integer
          example: 1
        status:
          type: string
          enum: [Free, Occupied]
          example: Free
    checkin-response:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
          format: date-time
          pattern: "dd-MM-yyyy hh:mm"
          example: "22.10.2021 14:30"
    checkout-response:
      type: object
      properties:
        id:
          type: string
        duration:
          type: string
          format: date-time
          pattern: "hh:mm"
          example: "02:30"
        price:
          type: string
          example: "CHF 12.00"